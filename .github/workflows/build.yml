name: Build Executables

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
        include:
          - os: windows-latest
            output_name: image-downloader-windows.exe
            artifact_name: windows-executable
          - os: macos-latest
            output_name: image-downloader-macos
            artifact_name: macos-executable

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pyinstaller

    - name: Build with PyInstaller (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --name image-downloader-windows --add-data "app;app" main.py

    - name: Build with PyInstaller (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --name image-downloader-macos --add-data "app:app" main.py

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.artifact_name }}
        path: dist/${{ matrix.output_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Download Windows artifact
      uses: actions/download-artifact@v3
      with:
        name: windows-executable
        path: ./artifacts/windows

    - name: Download macOS artifact
      uses: actions/download-artifact@v3
      with:
        name: macos-executable
        path: ./artifacts/macos

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          ./artifacts/windows/image-downloader-windows.exe
          ./artifacts/macos/image-downloader-macos
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

